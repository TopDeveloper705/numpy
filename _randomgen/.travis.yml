# Travis script that uses miniconda in place of the system installed python
# versions.  Allows substantial flexability for choosing versions of
# required packages and is simpler to use to test up-to-date scientific Python
# stack
group: edge
dist: trusty
sudo: required
language: python

env:
  global:
    # Doctr deploy key for bashtage/core-prng
    - secure: "urckknKH5lkUNjXuVCQGVEZYQfSQrAAvdp8sWAKlYJwJLT8iB439KrCUQu8InzcZAA9chPp3syCoT4E0NGkCVPhtJSs/7+LhG+aY/iU6Jp7bwpn5QHCNHQ5jwdc8A0ryqEoQhTiDauRtdzLWPtG5iliz+hr5SOB22w563Le3cx9w0vw9Jy36q+DHe91KEKeF4l464MHhx8aNTmSTBfxPUYyaPHn7/0Wi227PChKMbqnbtoNRcnRwNPjXbRIEs5w2VKtj9m+pvb+DGVjNeSrRBP7aaPgYY+WH+eBOsXrZNuYwF3LEcKx8edVGcEYf2CUKf1VWC2uug/BStY2PU2ZUu/ij3qh+tk2GKhFCc61OPiq7rpeG8Alp5b7IWyFzEjV8IahpdOwa81uGv8B52KD3REOJf8N28s1/WzPlOqRm/9ne+txUZHFk7abE69JK2cBjWGrhBLPxXZSumzhkrpZDyzNb0qZYQSAuAuxUdWhI1gdUJXhmlf4UUqM9vTp7129SbO4wrUK3TIZDIt+7tUuLJYfIm6pOdJBNfrTk4mtvwLh/hsNezd/Vv1BOqrvZ6ZGPMM9eDBh+tMvAfVBe6T6rDoSLUQzYf3GEfp/yJP+QrH9AD46s/DRNL/rAiyOW4oDhMiS+S5EVb/CEu4Ud82HyIZNFAi42gx0jJNkaK2gN8hE="

matrix:
  fast_finish: true
  include:
    - os: linux
      env: [PYTHON=2.7, NUMPY=1.10, CYTHON=0.24]
    - os: linux
      env: [PYTHON=3.5, NUMPY=1.11]
    - os: linux
      env: [PYTHON=3.6, NUMPY=1.13, CYTHON=0.25]
    - os: linux
      env: [PYTHON=3.6, NUMPY=1.13, CYTHON=0.26]
    - os: linux
      env: [PYTHON=3.6]
    - os: osx
      language: generic
      env: [PYTHON=3.6]


before_install:
  - if [[ ${TRAVIS_OS_NAME} == "osx" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda3.sh; fi
  - if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh; fi
  - chmod +x miniconda3.sh
  - ./miniconda3.sh -b
  - export PATH=${HOME}/miniconda3/bin:$PATH
  - conda config --set always_yes true
  - conda update --all --quiet
  - PKGS="python=${PYTHON}"
  - PKGS="${PKGS} numpy"; if [ ${NUMPY} ]; then PKGS="${PKGS}=${NUMPY}"; fi
  - PKGS="${PKGS} Cython"; if [ ${CYTHON} ]; then PKGS="${PKGS}=${CYTHON}"; fi
  - PKGS="${PKGS} pandas"; if [ ${PANDAS} ]; then PKGS="${PKGS}=${PANDAS}"; fi
  - conda create -n randomgen-test ${PKGS} pytest setuptools nose --quiet
  - source activate randomgen-test
  - pip install tempita coverage coveralls pytest-cov codecov -q
  # Docbuild
  - if [[ -z ${NUMPY} && ${TRAVIS_OS_NAME} == "linux" ]]; then pip install sphinx sphinx_rtd_theme guzzle_sphinx_theme ipython doctr -q; fi
  - if [[ -z ${NUMPY} && ${TRAVIS_OS_NAME} == "linux" ]]; then conda install numba pandas matplotlib --quiet; fi
  - export BUILD_DIR=${PWD}

install:
  - python setup.py develop

script:
  - set -e
  - pytest randomgen
  - |
    if [[ -z ${NUMPY} ]]; then
      python benchmark.py;
    fi
  - |
    if [[ -z ${NUMPY} && ${TRAVIS_OS_NAME} == "linux" ]]; then
      ls
      echo $PWD
      cd ${BUILD_DIR}/doc
      make html
      make html
      cd ${BUILD_DIR}
      doctr deploy doc
      if [[ ${TRAVIS_TAG}} ]]; then
        doctr deploy doc --no-require-master
      fi;
    fi;
