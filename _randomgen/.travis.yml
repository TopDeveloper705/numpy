# Travis script that uses miniconda in place of the system installed python
# versions.  Allows substantial flexability for choosing versions of
# required packages and is simpler to use to test up-to-date scientific Python
# stack
group: edge
dist: trusty
sudo: required
language: python

matrix:
  fast_finish: true
  include:
    - os: linux
      env: [PYTHON=2.7, NUMPY=1.10, CYTHON=0.24]
    - os: linux
      env: [PYTHON=3.5, NUMPY=1.11]
    - os: linux
      env: [PYTHON=3.6, NUMPY=1.13, CYTHON=0.25]
    - os: linux
      env: [PYTHON=3.6, NUMPY=1.13, CYTHON=0.26]
    - os: linux
      env: [PYTHON=3.6]
    - os: osx
      language: generic
      env: [PYTHON=3.6]


before_install:
  - if [[ ${TRAVIS_OS_NAME} == "osx" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda3.sh; fi
  - if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh; fi
  - chmod +x miniconda3.sh
  - ./miniconda3.sh -b
  - export PATH=${HOME}/miniconda3/bin:$PATH
  - conda config --set always_yes true
  - conda update --all --quiet
  - PKGS="python=${PYTHON}"
  - PKGS="${PKGS} numpy"; if [ ${NUMPY} ]; then PKGS="${PKGS}=${NUMPY}"; fi
  - PKGS="${PKGS} Cython"; if [ ${CYTHON} ]; then PKGS="${PKGS}=${CYTHON}"; fi
  - PKGS="${PKGS} pandas"; if [ ${PANDAS} ]; then PKGS="${PKGS}=${PANDAS}"; fi
  - conda create -n randomgen-test ${PKGS} pytest setuptools nose --quiet
  - source activate randomgen-test
  - pip install tempita -q

install:
  - python setup.py develop

script:
  - set -e
  - pytest randomgen
  - |
    if [[ -z ${NUMPY} ]]; then
      python benchmark.py;
    fi
