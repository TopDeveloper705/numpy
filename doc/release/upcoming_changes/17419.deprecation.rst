Arrays cannot be using subarray dtypes
--------------------------------------
Array creation and casting using ``np.array(obj, dtype)``
and ``arr.astype(dtype)`` will not support ``dtype``
to be a subarray dtype such as ``np.dtype("(2)i,")``.

For such a ``dtype`` the following behaviour occurs currently::

    res = np.array(obj, dtype)

    res.dtype is not dtype
    res.dtype is dtype.base
    res.shape[-dtype.ndim:] == dtype.shape

The shape of the dtype is included into the array.
This leads to inconsistencies when ``obj`` is:

* a scalar, such as ``np.array(1, dtype="(2)i")``
* an array, such as ``np.array(np.array([1]), dtype="(2)i")``

In most cases the work-around is to pass the output dtype directly
and possibly check ``res.shape[-dtype.ndim:] == dtype.shape``.
If this is insufficient, please open an issue on the NumPy issue
tracker.
