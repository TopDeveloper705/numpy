Comparison on ``object`` dtypes will prefer ``object`` output
-------------------------------------------------------------
Comparison ufuncs (``np.equal`` and friends) would return boolean arrays when
the input array dtype was ``object``. This led to inconsistent behaviour for
ragged arrays ``a = np.array([1, np.array([1, 2, 3])], dtype=object)``. This
will now return an object array::

    >>> a = np.array([1, np.array([1, 2, 3])], dtype=object)
    >>> np.equal(a, a)
    array([True, array([ True,  True,  True])], dtype=object)

The old behaviour, which will raise a ``ValueError`` in this case, is still
available by specifying a dtype as ``np.equal(a, a, dtype=bool)``.

